class Solution {
    public List<List<Integer>> generate(int n) {
        List<List<Integer>> triangle = new ArrayList<List<Integer>>();
        if(n == 1){
            ArrayList<Integer> row = new ArrayList<>();
            row.add(1);
            triangle.add(row);
            return triangle;
        }
        for(int i = 0; i < n; i++){
            ArrayList<Integer> row = new ArrayList<>();
            for(int j = 0; j <= i; j++){
                if(j == 0 || i == j){
                    row.add(1);
                }
                else{
                    row.add(triangle.get(i - 1).get(j - 1) + triangle.get(i - 1).get(j));
                }
            }
            triangle.add(row);
        }
        return triangle;
    }
}

// class Solution {
//     public List<List<Integer>> generate(int n) {
//         List<List<Integer>> temp = new ArrayList<List<Integer>>();
//         int[][] dp = new int[n + 1][n + 1];
//         dp[1][1] = 1;
//         for(int i = 2; i <= n; i++){
//             for(int j = 1; j <=i; j++){
//                 dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];
//             }
//         }
//         for(int i = 1; i <= n; i++){
//             for(int j = 1; j <=i; j++){
//         System.out.print(dp[i][j]);
//             }
//             System.out.println();
//         }
//         return temp;
//     }
// }
